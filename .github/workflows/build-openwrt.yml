#
# 这是“黄金最终版”的 ImmortalWrt GitHub Actions 工作流文件
# 它包含了所有已知的修复和最佳实践
#

name: Build ImmortalWrt

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt.git
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: immortal.config
  SSH_ACTION: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize build environment
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Clone ImmortalWrt source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt

    - name: Load custom configuration
      run: |
        # 将仓库中的 feeds 和 .config 文件复制到 openwrt 目录下
        [ -e $FEEDS_CONF ] && cp $FEEDS_CONF openwrt/feeds.conf.default
        [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt/.config
        cd openwrt
        
    - name: Update feeds and Install packages (With conflict resolver)
      working-directory: ./openwrt
      run: |
        echo "================================================="
        echo "Updating feeds using feeds.conf.default..."
        echo "================================================="
        ./scripts/feeds update -a
        
        echo "================================================="
        echo "CRITICAL STEP: Removing conflict packages..."
        echo "================================================="
        # 这是解决冲突的核心脚本，它会删除官方源中与 Kenzok8 冲突的包
        rm -rf feeds/luci/applications/luci-app-mosdns
        rm -rf feeds/packages/net/{alist,adguardhome,mosdns,xray*,v2ray*,sing-box,smartdns}
        rm -rf feeds/packages/utils/v2dat
        
        echo "================================================="
        echo "Cloning specific golang version for compiling..."
        echo "================================================="
        rm -rf feeds/packages/lang/golang
        git clone https://github.com/kenzok8/golang feeds/packages/lang/golang

        echo "================================================="
        echo "Installing all packages from all feeds..."
        echo "================================================="
        ./scripts/feeds install -a

    - name: Generate final .config
      working-directory: ./openwrt
      run: |
        make defconfig

    - name: Download package sources
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread compile"
        make -j$(nproc) V=s

    - name: Organize firmware files
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE_PATH=$(pwd)" >> $GITHUB_ENV

    - name: Upload firmware to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ImmortalWrt_Firmware_${{ env.DEVICE_NAME }}
        path: ${{ env.FIRMWARE_PATH }}
